// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     evolution.avsc
 */
package avro

import (
	"errors"
	"io"

	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
)


type UnionStringLongIntFloatDoubleNullTypeEnum int

const (
	UnionStringLongIntFloatDoubleNullTypeEnumString UnionStringLongIntFloatDoubleNullTypeEnum = 0

	UnionStringLongIntFloatDoubleNullTypeEnumLong UnionStringLongIntFloatDoubleNullTypeEnum = 1

	UnionStringLongIntFloatDoubleNullTypeEnumInt UnionStringLongIntFloatDoubleNullTypeEnum = 2

	UnionStringLongIntFloatDoubleNullTypeEnumFloat UnionStringLongIntFloatDoubleNullTypeEnum = 3

	UnionStringLongIntFloatDoubleNullTypeEnumDouble UnionStringLongIntFloatDoubleNullTypeEnum = 4
)

type UnionStringLongIntFloatDoubleNull struct { 
	String string

	Long int64

	Int int32

	Float float32

	Double float64

	UnionType UnionStringLongIntFloatDoubleNullTypeEnum
}

func writeUnionStringLongIntFloatDoubleNull(r *UnionStringLongIntFloatDoubleNull, w io.Writer) error { 
	if r == nil {
		return vm.WriteLong(int64(5), w)
	} 
	if err := vm.WriteLong(int64(r.UnionType), w); err != nil {
		return err
	}
	switch r.UnionType{ 
	case UnionStringLongIntFloatDoubleNullTypeEnumString:
		return vm.WriteString(r.String, w)
	case UnionStringLongIntFloatDoubleNullTypeEnumLong:
		return vm.WriteLong(r.Long, w)
	case UnionStringLongIntFloatDoubleNullTypeEnumInt:
		return vm.WriteInt(r.Int, w)
	case UnionStringLongIntFloatDoubleNullTypeEnumFloat:
		return vm.WriteFloat(r.Float, w)
	case UnionStringLongIntFloatDoubleNullTypeEnumDouble:
		return vm.WriteDouble(r.Double, w)
	}
	return errors.New("invalid value for *UnionStringLongIntFloatDoubleNull")
}

func (_ *UnionStringLongIntFloatDoubleNull) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *UnionStringLongIntFloatDoubleNull) SetInt(v int32) { panic("Unsupported operation") }
func (_ *UnionStringLongIntFloatDoubleNull) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *UnionStringLongIntFloatDoubleNull) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionStringLongIntFloatDoubleNull) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *UnionStringLongIntFloatDoubleNull) SetString(v string) { panic("Unsupported operation") }

func (r *UnionStringLongIntFloatDoubleNull) SetLong(v int64) { 
	r.UnionType = (UnionStringLongIntFloatDoubleNullTypeEnum)(v)
}

func (r *UnionStringLongIntFloatDoubleNull) Get(i int) types.Field {
	switch (i) { 
	case 0:
		
		
		return (*types.String)(&r.String)
		
	
	case 1:
		
		
		return (*types.Long)(&r.Long)
		
	
	case 2:
		
		
		return (*types.Int)(&r.Int)
		
	
	case 3:
		
		
		return (*types.Float)(&r.Float)
		
	
	case 4:
		
		
		return (*types.Double)(&r.Double)
		
	
	}
	panic("Unknown field index")
}

func (r *UnionStringLongIntFloatDoubleNull) Clear(i int) { panic("Unsupported operation") }
func (_ *UnionStringLongIntFloatDoubleNull) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionStringLongIntFloatDoubleNull) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionStringLongIntFloatDoubleNull) ClearMap(key string) { panic("Unsupported operation") }
func (_ *UnionStringLongIntFloatDoubleNull) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *UnionStringLongIntFloatDoubleNull) Finalize()  { }
