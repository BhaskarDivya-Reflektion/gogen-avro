// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     namespace.avsc
 */
package avro

import (
	"errors"
	"io"

	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
)


type UnionNullHeaderworksDatatypeUUIDTypeEnum int

const (
	UnionNullHeaderworksDatatypeUUIDTypeEnumHeaderworksDatatypeUUID UnionNullHeaderworksDatatypeUUIDTypeEnum = 1
)

type UnionNullHeaderworksDatatypeUUID struct { 
	HeaderworksDatatypeUUID HeaderworksDatatypeUUID

	UnionType UnionNullHeaderworksDatatypeUUIDTypeEnum
}

func writeUnionNullHeaderworksDatatypeUUID(r *UnionNullHeaderworksDatatypeUUID, w io.Writer) error { 
	if r == nil {
		return vm.WriteLong(int64(0), w)
	} 
	if err := vm.WriteLong(int64(r.UnionType), w); err != nil {
		return err
	}
	switch r.UnionType{ 
	case UnionNullHeaderworksDatatypeUUIDTypeEnumHeaderworksDatatypeUUID:
		return writeHeaderworksDatatypeUUID(r.HeaderworksDatatypeUUID, w)
	}
	return errors.New("invalid value for *UnionNullHeaderworksDatatypeUUID")
}

func (_ *UnionNullHeaderworksDatatypeUUID) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) SetInt(v int32) { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) SetString(v string) { panic("Unsupported operation") }

func (r *UnionNullHeaderworksDatatypeUUID) SetLong(v int64) { 
	r.UnionType = (UnionNullHeaderworksDatatypeUUIDTypeEnum)(v)
}

func (r *UnionNullHeaderworksDatatypeUUID) Get(i int) types.Field {
	switch (i) { 
	case 1:
		
		r.HeaderworksDatatypeUUID = HeaderworksDatatypeUUID{}
		
		
		return &r.HeaderworksDatatypeUUID
		
	
	}
	panic("Unknown field index")
}

func (r *UnionNullHeaderworksDatatypeUUID) Clear(i int) { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *UnionNullHeaderworksDatatypeUUID) Finalize()  { }
