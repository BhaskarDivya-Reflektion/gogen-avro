// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     arrays.avsc
 */
package avro

import (
	"io"

	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
)

func writeArrayLong(r []int64, w io.Writer) error {
	err := vm.WriteLong(int64(len(r)),w)
	if err != nil || len(r) == 0 {
		return err
	}
	for _, e := range r {
		err = vm.WriteLong(e, w)
		if err != nil {
			return err
		}
	}
	return vm.WriteLong(0,w)
}

type ArrayLong []int64

func (_ *ArrayLong) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *ArrayLong) SetInt(v int32) { panic("Unsupported operation") }
func (_ *ArrayLong) SetLong(v int64) { panic("Unsupported operation") }
func (_ *ArrayLong) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *ArrayLong) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *ArrayLong) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *ArrayLong) SetString(v string) { panic("Unsupported operation") }
func (_ *ArrayLong) SetUnionElem(v int64) { panic("Unsupported operation") }
func (_ *ArrayLong) Get(i int) types.Field { panic("Unsupported operation") }
func (_ *ArrayLong) Clear(i int) { panic("Unsupported operation") }
func (_ *ArrayLong) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *ArrayLong) Finalize() { }
func (_ *ArrayLong) SetDefault(i int) { panic("Unsupported operation") }

func (r *ArrayLong) AppendArray() types.Field {
	var v int64
	
	*r = append(*r, v)
	
	return (*types.Long)(&(*r)[len(*r)-1])
	
}

