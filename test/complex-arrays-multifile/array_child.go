// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCES:
 *     child.avsc
 *     parent.avsc
 */
package avro

import (
	"io"

	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
)

func writeArrayChild(r []Child, w io.Writer) error {
	err := vm.WriteLong(int64(len(r)),w)
	if err != nil || len(r) == 0 {
		return err
	}
	for _, e := range r {
		err = writeChild(e, w)
		if err != nil {
			return err
		}
	}
	return vm.WriteLong(0,w)
}

type ArrayChild []Child

func (_ *ArrayChild) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *ArrayChild) SetInt(v int32) { panic("Unsupported operation") }
func (_ *ArrayChild) SetLong(v int64) { panic("Unsupported operation") }
func (_ *ArrayChild) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *ArrayChild) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *ArrayChild) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *ArrayChild) SetString(v string) { panic("Unsupported operation") }
func (_ *ArrayChild) SetUnionElem(v int64) { panic("Unsupported operation") }
func (_ *ArrayChild) Get(i int) types.Field { panic("Unsupported operation") }
func (_ *ArrayChild) Clear(i int) { panic("Unsupported operation") }
func (_ *ArrayChild) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *ArrayChild) ClearMap(key string) { panic("Unsupported operation") }
func (_ *ArrayChild) Finalize() { }
func (_ *ArrayChild) SetDefault(i int) { panic("Unsupported operation") }

func (r *ArrayChild) AppendArray() types.Field {
	var v Child
	
	v = Child{}

	
	*r = append(*r, v)
	
	return &((*r)[len(*r)-1])
	
}

